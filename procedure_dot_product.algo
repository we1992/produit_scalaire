PROCEDURE dot_product(n:INTEGER,v1: ARRAY_OF INTEGER[],v2: ARRAY_OF INTEGER[],var ps:INTEGER)
VAR
    i:INTEGER:=0;
BEGIN
   FOR i FROM 0 TO n-1 STEP 1  DO
    ps:=ps+(v1[i]*v2[i])
END_FOR
END


ALGORITHM algorithm_name
VAR
    n:INTEGER; //taille de vecteur
    i,j:INTEGER ;
    tab : ARRAY_OF INTEGER ;// tableau pour présenter le vecteur
    x:INTEGER:=0; //nombre de vecteur
    ps:INTEGER;
BEGIN
      // lire la taille des vecteurs
   REPEAT
        Read(n);
    UNTIL (n<=0)
    // lire n paires vecteurs
  REPEAT
     Read(x);
  UNTIL (x % 2 <> 0)
  // remplir les vecteures
   FOR i FROM 0 TO x-1 STEP 1 DO
        
        FOR j FROM 0 TO n-1 STEP 1  DO
        Read(Vi[j]) ; 
        END_FOR

    END_FOR
     // tester si deux vecteurs sont orthogonaux
    
     FOR i FROM 0 TO x-2 STEP 1  DO
        
        FOR j FROM i+1 TO x-1 STEP 1 DO
            ps:=0;
            //appel de procédure
            dot_product(n,vi,vj,ps)

            //tester si ogthogonal
            IF (ps = 0) THEN
                Write(Vi , Vj , "sont orthogonales")
            END_IF


        END_FOR
        
    END_FOR

END